-- =============================================
-- Author:		Brad Chen
-- https://github.com/bradchendev/Power-SQL-Scripts
-- https://blogs.msdn.microsoft.com/bradchen/
-- Create date: 2017/7/11
-- Description:	執行計畫 相關語法

-- =============================================



--sys.dm_exec_cached_plans (Transact-SQL)
--https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-exec-cached-plans-transact-sql


-- 目前Cache在SQL Server的執行計畫 總數 與 大小
 SELECT
        COUNT(1) AS PlanCount,
        SUM (cp.size_in_bytes) / 1024 AS SizeInKB
   FROM sys.dm_exec_cached_plans AS cp
   CROSS APPLY sys.dm_exec_query_plan(cp.plan_handle) AS qp
   CROSS APPLY sys.dm_exec_sql_text(cp.plan_handle) AS st ;
  
  
-- 目前Cache在SQL Server的執行計畫清單，SQL Batch, plan_handle, 使用次數
-- Proc / Adhoc / Prepared
 SELECT 
    cp.objtype AS PlanType,
    cp.refcounts AS ReferenceCounts,
    cp.usecounts AS UseCounts,
    st. text AS SQLBatch,
    cp.plan_handle
  FROM sys.dm_exec_cached_plans AS cp
  CROSS APPLY sys.dm_exec_query_plan (cp.plan_handle) AS qp
  CROSS APPLY sys.dm_exec_sql_text (cp.plan_handle) AS st;
   



-- 注意 在效能差的硬體上查詢會查很久
SELECT cp.objtype AS PlanType,
       OBJECT_NAME(st.objectid,st.dbid) AS ObjectName,
       cp.refcounts AS ReferenceCounts,
       cp.usecounts AS UseCounts,
       st.text AS SQLBatch,
       qp.query_plan AS QueryPlan
FROM sys.dm_exec_cached_plans AS cp
CROSS APPLY sys.dm_exec_query_plan(cp.plan_handle) AS qp
CROSS APPLY sys.dm_exec_sql_text(cp.plan_handle) AS st;
--WHERE objtype ='Proc'
--WHERE objtype ='Trigger'




-- ObjectName是procedure name
-- UseCounts使用次數

--PlanType	ObjectName	ReferenceCounts		UseCounts	SQLBatch	QueryPlan
--Trigger	Backup_client_basic_student	1	1	CREATE  TRIGGER [dbo].[Backup_client_basic_student]     ON  [dbo].[client_basic]     AFTER  INSERT, UPDATE  AS   DECLARE @hostname NVARCHAR(100)   SET @hostname = HOST_NAME()   if update(industry) or update(role) or update(focus) or update(interest) OR UPDATE(olevel) OR UPDATE(nlevel) OR UPDATE(clevel) OR UPDATE(valid)  BEGIN     insert into client_basic_log (sn, industry, role, focus, interest, olevel, nlevel, clevel, trigg_inpdate, hostname,valid)   select sn, industry, role, focus, interest, olevel, nlevel, clevel, getdate(), @hostname ,valid   from DELETED    END	<ShowPlanXML xmlns="http://schemas.microsoft.com/sqlserver/2004/07/showplan" Version="1.1" Build="10.50.4000.0"><BatchSequence><Batch><Statements><StmtSimple StatementText="CREATE  TRIGGER [dbo].[Backup_client_basic_student]&#xD;&#xA;   ON  [dbo].[client_basic]&#xD;&#xA;   AFTER  INSERT, UPDATE&#xD;&#xA;AS &#xD;&#xA;DECLARE @hostname NVARCHAR(100) &#xD;&#xA;SET @hostname = HOST_NAME() &#xD;" StatementId="1" StatementCompId="4" StatementType="ASSIGN" /><StmtCond StatementText="&#xA;if update(industry) or update(role) or update(focus) or update(interest) OR UPDATE(olevel) OR UPDATE(nlevel) OR UPDATE(clevel) OR UPDATE(valid)&#xD;" StatementId="2" StatementCompId="5" StatementType="COND"><Condition /><Then><Statements><StmtSimple StatementText="&#xA;BEGIN&#xD;&#xA;&#xD;&#xA;&#x9;insert into client_basic_log (sn, industry, role, focus, interest, olevel, nlevel, clevel, trigg_inpdate, hostname,valid)&#xD;&#xA;&#x9;select sn, industry, role, focus, interest, olevel, nlevel, clevel, getdate(), @hostname ,valid&#xD;&#xA;&#x9;from DELETED&#xD;&#xA;&#xD;" StatementId="3" StatementCompId="6" StatementType="INSERT" StatementSubTreeCost="0.0132843" StatementEstRows="1" StatementOptmLevel="FULL" QueryHash="0x771FD8D6DCF72A8A" QueryPlanHash="0xB2BB4D8930B084FA" StatementOptmEarlyAbortReason="GoodEnoughPlanFound"><StatementSetOptions QUOTED_IDENTIFIER="true" ARITHABORT="true" CONCAT_NULL_YIELDS_NULL="true" ANSI_NULLS="true" ANSI_PADDING="true" ANSI_WARNINGS="true" NUMERIC_ROUNDABORT="false" /><QueryPlan CachedPlanSize="32" CompileTime="326" CompileCPU="6" CompileMemory="808"><RelOp NodeId="0" PhysicalOp="Table Insert" LogicalOp="Insert" EstimateRows="1" EstimateIO="0.01" EstimateCPU="1e-006" AvgRowSize="9" EstimatedTotalSubtreeCost="0.0132843" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList /><Update DMLRequestSort="0"><Object Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" IndexKind="Heap" /><SetPredicate><ScalarOperator ScalarString="[muchnewdb].[dbo].[client_basic_log].[sn] = [muchnewdb].[dbo].[client_basic].[sn],[muchnewdb].[dbo].[client_basic_log].[industry] = [muchnewdb].[dbo].[client_basic].[industry],[muchnewdb].[dbo].[client_basic_log].[role] = [muchnewdb].[dbo].[client_basic].[role],[muchnewdb].[dbo].[client_basic_log].[focus] = [muchnewdb].[dbo].[client_basic].[focus],[muchnewdb].[dbo].[client_basic_log].[interest] = [muchnewdb].[dbo].[client_basic].[interest],[muchnewdb].[dbo].[client_basic_log].[olevel] = [muchnewdb].[dbo].[client_basic].[olevel],[muchnewdb].[dbo].[client_basic_log].[nlevel] = [muchnewdb].[dbo].[client_basic].[nlevel],[muchnewdb].[dbo].[client_basic_log].[clevel] = [muchnewdb].[dbo].[client_basic].[clevel],[muchnewdb].[dbo].[client_basic_log].[trigg_inpdate] = [Expr1006],[muchnewdb].[dbo].[client_basic_log].[hostname] = [@hostname],[muchnewdb].[dbo].[client_basic_log].[valid] = [muchnewdb].[dbo].[client_basic].[valid]"><ScalarExpressionList><ScalarOperator><MultipleAssign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="sn" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="sn" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="industry" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="industry" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="role" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="role" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="focus" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="focus" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="interest" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="interest" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="olevel" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="olevel" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="nlevel" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="nlevel" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="clevel" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="clevel" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="trigg_inpdate" /><ScalarOperator><Identifier><ColumnReference Column="Expr1006" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="hostname" /><ScalarOperator><Identifier><ColumnReference Column="@hostname" /></Identifier></ScalarOperator></Assign><Assign><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic_log]" Column="valid" /><ScalarOperator><Identifier><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="valid" /></Identifier></ScalarOperator></Assign></MultipleAssign></ScalarOperator></ScalarExpressionList></ScalarOperator></SetPredicate><RelOp NodeId="1" PhysicalOp="Compute Scalar" LogicalOp="Compute Scalar" EstimateRows="1" EstimateIO="0" EstimateCPU="1e-007" AvgRowSize="346" EstimatedTotalSubtreeCost="0.0032833" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="sn" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="industry" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="role" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="focus" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="interest" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="olevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="nlevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="clevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="valid" /><ColumnReference Column="Expr1006" /></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column="Expr1006" /><ScalarOperator ScalarString="getdate()"><Identifier><ColumnReference Column="ConstExpr1007"><ScalarOperator><Intrinsic FunctionName="getdate" /></ScalarOperator></ColumnReference></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId="2" PhysicalOp="Top" LogicalOp="Top" EstimateRows="1" EstimateIO="0" EstimateCPU="1e-007" AvgRowSize="338" EstimatedTotalSubtreeCost="0.0032832" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="sn" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="industry" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="role" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="focus" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="interest" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="olevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="nlevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="clevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="valid" /></OutputList><Top RowCount="1" IsPercent="0" WithTies="0"><TopExpression><ScalarOperator ScalarString="(0)"><Const ConstValue="(0)" /></ScalarOperator></TopExpression><RelOp NodeId="3" PhysicalOp="Deleted Scan" LogicalOp="Deleted Scan" EstimateRows="1" EstimateIO="0.0032035" EstimateCPU="7.96e-005" AvgRowSize="338" EstimatedTotalSubtreeCost="0.0032831" TableCardinality="0" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="sn" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="industry" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="role" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="focus" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="interest" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="olevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="nlevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="clevel" /><ColumnReference Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Column="valid" /></OutputList><DeletedScan><Object Database="[muchnewdb]" Schema="[dbo]" Table="[client_basic]" Index="[PK_client_basic]" IndexKind="Clustered" /></DeletedScan></RelOp></Top></RelOp></ComputeScalar></RelOp></Update></RelOp></QueryPlan></StmtSimple></Statements></Then></StmtCond></Statements></Batch></BatchSequence></ShowPlanXML>
--Proc	uspGrantPermission	1	148	  create procedure uspGrantPermission @permissionname sysname, @objectname sysname, @username sysname  with execute as 'permissionadmin'  as  begin  declare @permissionname_ sysname;  declare @objectname_ sysname;  declare @username_ sysname;  set @permissionname_ = @permissionname;  set @objectname_ = @objectname;  set @username_ = @username ;    if @permissionname_ not in ('select', 'execute')   print 'Please check the @permissionname parameter!';  if not exists (select * from sys.objects where name = @objectname_)   print 'The obejct is not exists!';  if exists (select * from sys.objects where name = @objectname_ and type = 's')   print 'This is a system objects!';     exec ('grant ' + @permissionname_ + ' on ' + @objectname_ + ' to ' + @username_);  end  	<ShowPlanXML xmlns="http://schemas.microsoft.com/sqlserver/2004/07/showplan" Version="1.1" Build="10.50.4000.0"><BatchSequence><Batch><Statements><StmtSimple StatementText="&#xD;&#xA;create procedure uspGrantPermission @permissionname sysname, @objectname sysname, @username sysname&#xD;&#xA;with execute as 'permissionadmin'&#xD;&#xA;as&#xD;&#xA;begin&#xD;&#xA;declare @permissionname_ sysname;&#xD;&#xA;declare @objectname_ sysname;&#xD;&#xA;declare @username_ sysname;&#xD;&#xA;set @permissionname_ = @permissionname;&#xD;" StatementId="1" StatementCompId="17" StatementType="ASSIGN" /><StmtSimple StatementText="&#xA;set @objectname_ = @objectname;&#xD;" StatementId="2" StatementCompId="18" StatementType="ASSIGN" /><StmtSimple StatementText="&#xA;set @username_ = @username ;&#xD;&#xA;&#xD;" StatementId="3" StatementCompId="19" StatementType="ASSIGN" /><StmtCond StatementText="&#xA;if @permissionname_ not in ('select', 'execute')&#xD;&#xA;" StatementId="4" StatementCompId="20" StatementType="COND"><Condition /><Then><Statements><StmtSimple StatementText="&#x9;print 'Please check the @permissionname parameter!';&#xD;" StatementId="5" StatementCompId="21" StatementType="PRINT" /></Statements></Then></StmtCond><StmtCond StatementText="&#xA;if not exists (select * from sys.objects where name = @objectname_)&#xD;&#xA;" StatementId="6" StatementCompId="23" StatementType="COND WITH QUERY" StatementSubTreeCost="0.00657758" StatementEstRows="1" StatementOptmLevel="FULL" QueryHash="0xC10005C8BB7EF5AE" QueryPlanHash="0xB1B2770988E6CEB9" StatementOptmEarlyAbortReason="GoodEnoughPlanFound"><StatementSetOptions QUOTED_IDENTIFIER="true" ARITHABORT="true" CONCAT_NULL_YIELDS_NULL="true" ANSI_NULLS="true" ANSI_PADDING="true" ANSI_WARNINGS="true" NUMERIC_ROUNDABORT="false" /><Condition><QueryPlan CachedPlanSize="32" CompileTime="575" CompileCPU="12" CompileMemory="712"><RelOp NodeId="0" PhysicalOp="Compute Scalar" LogicalOp="Compute Scalar" EstimateRows="1" EstimateIO="0" EstimateCPU="1e-007" AvgRowSize="11" EstimatedTotalSubtreeCost="0.00657758" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Column="Expr1040" /></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column="Expr1040" /><ScalarOperator ScalarString="CASE WHEN [Expr1041] IS NULL THEN (1) ELSE (0) END"><IF><Condition><ScalarOperator><Compare CompareOp="IS"><ScalarOperator><Identifier><ColumnReference Column="Expr1041" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="NULL" /></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue="(1)" /></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue="(0)" /></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId="1" PhysicalOp="Nested Loops" LogicalOp="Left Semi Join" EstimateRows="1" EstimateIO="0" EstimateCPU="4.18e-006" AvgRowSize="9" EstimatedTotalSubtreeCost="0.00657748" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Column="Expr1041" /></OutputList><NestedLoops Optimized="0"><DefinedValues><DefinedValue><ColumnReference Column="Expr1041" /></DefinedValue></DefinedValues><ProbeColumn><ColumnReference Column="Expr1041" /></ProbeColumn><RelOp NodeId="2" PhysicalOp="Constant Scan" LogicalOp="Constant Scan" EstimateRows="1" EstimateIO="0" EstimateCPU="1.157e-006" AvgRowSize="9" EstimatedTotalSubtreeCost="1.157e-006" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList /><ConstantScan /></RelOp><RelOp NodeId="3" PhysicalOp="Nested Loops" LogicalOp="Inner Join" EstimateRows="1" EstimateIO="0" EstimateCPU="4.18e-006" AvgRowSize="9" EstimatedTotalSubtreeCost="0.00657166" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList /><NestedLoops Optimized="0"><OuterReferences><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></OuterReferences><RelOp NodeId="4" PhysicalOp="Filter" LogicalOp="Filter" EstimateRows="1" EstimateIO="0" EstimateCPU="1.28e-006" AvgRowSize="11" EstimatedTotalSubtreeCost="0.00328438" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></OutputList><Filter StartupExpression="0"><RelOp NodeId="5" PhysicalOp="Index Seek" LogicalOp="Index Seek" EstimateRows="1" EstimateIO="0.003125" EstimateCPU="0.0001581" AvgRowSize="12" EstimatedTotalSubtreeCost="0.0032831" TableCardinality="1890" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></OutputList><IndexScan Ordered="1" ScanDirection="FORWARD" ForcedIndex="0" ForceSeek="0" ForceScan="0" NoExpandHint="0"><DefinedValues><DefinedValue><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></DefinedValue></DefinedValues><Object Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Index="[nc2]" Alias="[o]" IndexKind="NonClustered" /><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType="EQ"><RangeColumns><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="name" /></RangeColumns><RangeExpressions><ScalarOperator ScalarString="[@objectname_]"><Identifier><ColumnReference Column="@objectname_" /></Identifier></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates><Predicate><ScalarOperator ScalarString="[ABCJR].[sys].[sysschobjs].[nsclass] as [o].[nsclass]=(0)"><Compare CompareOp="EQ"><ScalarOperator><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="nsclass" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="(0)" /></ScalarOperator></Compare></ScalarOperator></Predicate></IndexScan></RelOp><Predicate><ScalarOperator ScalarString="has_access('CO',[ABCJR].[sys].[sysschobjs].[id] as [o].[id])=(1)"><Compare CompareOp="EQ"><ScalarOperator><Intrinsic FunctionName="has_access"><ScalarOperator><Const ConstValue="'CO'" /></ScalarOperator><ScalarOperator><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="" /></ScalarOperator><ScalarOperator><Const ConstValue="" /></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue="(1)" /></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId="8" PhysicalOp="Clustered Index Seek" LogicalOp="Clustered Index Seek" EstimateRows="1" EstimateIO="0.003125" EstimateCPU="0.0001581" AvgRowSize="9" EstimatedTotalSubtreeCost="0.0032831" TableCardinality="1890" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList /><IndexScan Lookup="1" Ordered="1" ScanDirection="FORWARD" ForcedIndex="0" ForceSeek="0" ForceScan="0" NoExpandHint="0"><DefinedValues /><Object Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Index="[clst]" Alias="[o]" TableReferenceId="-1" IndexKind="Clustered" /><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType="EQ"><RangeColumns><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></RangeColumns><RangeExpressions><ScalarOperator ScalarString="[ABCJR].[sys].[sysschobjs].[id] as [o].[id]"><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></Identifier></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates><Predicate><ScalarOperator ScalarString="[ABCJR].[sys].[sysschobjs].[pclass] as [o].[pclass]=(1)"><Compare CompareOp="EQ"><ScalarOperator><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="pclass" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="(1)" /></ScalarOperator></Compare></ScalarOperator></Predicate></IndexScan></RelOp></NestedLoops></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></QueryPlan></Condition><Then><Statements><StmtSimple StatementText="&#x9;print 'The obejct is not exists!';&#xD;" StatementId="7" StatementCompId="24" StatementType="PRINT" /></Statements></Then></StmtCond><StmtCond StatementText="&#xA;if exists (select * from sys.objects where name = @objectname_ and type = 's')&#xD;&#xA;" StatementId="8" StatementCompId="26" StatementType="COND WITH QUERY" StatementSubTreeCost="0.00657798" StatementEstRows="1" StatementOptmLevel="FULL" QueryHash="0x264F1D5FF7851872" QueryPlanHash="0x9620531D98663A8F" StatementOptmEarlyAbortReason="GoodEnoughPlanFound"><StatementSetOptions QUOTED_IDENTIFIER="true" ARITHABORT="true" CONCAT_NULL_YIELDS_NULL="true" ANSI_NULLS="true" ANSI_PADDING="true" ANSI_WARNINGS="true" NUMERIC_ROUNDABORT="false" /><Condition><QueryPlan CachedPlanSize="32" CompileTime="14" CompileCPU="10" CompileMemory="728"><RelOp NodeId="0" PhysicalOp="Compute Scalar" LogicalOp="Compute Scalar" EstimateRows="1" EstimateIO="0" EstimateCPU="1e-007" AvgRowSize="11" EstimatedTotalSubtreeCost="0.00657798" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Column="Expr1040" /></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column="Expr1040" /><ScalarOperator ScalarString="CASE WHEN [Expr1041] THEN (1) ELSE (0) END"><IF><Condition><ScalarOperator><Identifier><ColumnReference Column="Expr1041" /></Identifier></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue="(1)" /></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue="(0)" /></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId="1" PhysicalOp="Nested Loops" LogicalOp="Left Semi Join" EstimateRows="1" EstimateIO="0" EstimateCPU="4.18e-006" AvgRowSize="9" EstimatedTotalSubtreeCost="0.00657788" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Column="Expr1041" /></OutputList><NestedLoops Optimized="0"><DefinedValues><DefinedValue><ColumnReference Column="Expr1041" /></DefinedValue></DefinedValues><ProbeColumn><ColumnReference Column="Expr1041" /></ProbeColumn><RelOp NodeId="2" PhysicalOp="Constant Scan" LogicalOp="Constant Scan" EstimateRows="1" EstimateIO="0" EstimateCPU="1.157e-006" AvgRowSize="9" EstimatedTotalSubtreeCost="1.157e-006" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList /><ConstantScan /></RelOp><RelOp NodeId="3" PhysicalOp="Nested Loops" LogicalOp="Inner Join" EstimateRows="1" EstimateIO="0" EstimateCPU="4.18e-006" AvgRowSize="10" EstimatedTotalSubtreeCost="0.00657166" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList /><NestedLoops Optimized="0"><OuterReferences><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></OuterReferences><RelOp NodeId="4" PhysicalOp="Filter" LogicalOp="Filter" EstimateRows="1" EstimateIO="0" EstimateCPU="1.28e-006" AvgRowSize="11" EstimatedTotalSubtreeCost="0.00328438" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></OutputList><Filter StartupExpression="0"><RelOp NodeId="5" PhysicalOp="Index Seek" LogicalOp="Index Seek" EstimateRows="1" EstimateIO="0.003125" EstimateCPU="0.0001581" AvgRowSize="12" EstimatedTotalSubtreeCost="0.0032831" TableCardinality="1890" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></OutputList><IndexScan Ordered="1" ScanDirection="FORWARD" ForcedIndex="0" ForceSeek="0" ForceScan="0" NoExpandHint="0"><DefinedValues><DefinedValue><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></DefinedValue></DefinedValues><Object Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Index="[nc2]" Alias="[o]" IndexKind="NonClustered" /><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType="EQ"><RangeColumns><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="name" /></RangeColumns><RangeExpressions><ScalarOperator ScalarString="[@objectname_]"><Identifier><ColumnReference Column="@objectname_" /></Identifier></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates><Predicate><ScalarOperator ScalarString="[ABCJR].[sys].[sysschobjs].[nsclass] as [o].[nsclass]=(0)"><Compare CompareOp="EQ"><ScalarOperator><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="nsclass" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="(0)" /></ScalarOperator></Compare></ScalarOperator></Predicate></IndexScan></RelOp><Predicate><ScalarOperator ScalarString="has_access('CO',[ABCJR].[sys].[sysschobjs].[id] as [o].[id])=(1)"><Compare CompareOp="EQ"><ScalarOperator><Intrinsic FunctionName="has_access"><ScalarOperator><Const ConstValue="'CO'" /></ScalarOperator><ScalarOperator><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="" /></ScalarOperator><ScalarOperator><Const ConstValue="" /></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue="(1)" /></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId="8" PhysicalOp="Clustered Index Seek" LogicalOp="Clustered Index Seek" EstimateRows="1" EstimateIO="0.003125" EstimateCPU="0.0001581" AvgRowSize="10" EstimatedTotalSubtreeCost="0.0032831" TableCardinality="1890" Parallel="0" EstimateRebinds="0" EstimateRewinds="0"><OutputList /><IndexScan Lookup="1" Ordered="1" ScanDirection="FORWARD" ForcedIndex="0" ForceSeek="0" ForceScan="0" NoExpandHint="0"><DefinedValues /><Object Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Index="[clst]" Alias="[o]" TableReferenceId="-1" IndexKind="Clustered" /><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType="EQ"><RangeColumns><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></RangeColumns><RangeExpressions><ScalarOperator ScalarString="[ABCJR].[sys].[sysschobjs].[id] as [o].[id]"><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="id" /></Identifier></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates><Predicate><ScalarOperator ScalarString="[ABCJR].[sys].[sysschobjs].[pclass] as [o].[pclass]=(1) AND [ABCJR].[sys].[sysschobjs].[type] as [o].[type]='s'"><Logical Operation="AND"><ScalarOperator><Compare CompareOp="EQ"><ScalarOperator><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="pclass" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="(1)" /></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Compare CompareOp="EQ"><ScalarOperator><Identifier><ColumnReference Database="[ABCJR]" Schema="[sys]" Table="[sysschobjs]" Alias="[o]" Column="type" /></Identifier></ScalarOperator><ScalarOperator><Const ConstValue="'s'" /></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></IndexScan></RelOp></NestedLoops></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></QueryPlan></Condition><Then><Statements><StmtSimple StatementText="&#x9;print 'This is a system objects!';&#xD;&#xA;&#x9;&#xD;" StatementId="9" StatementCompId="27" StatementType="PRINT" /></Statements></Then></StmtCond><StmtSimple StatementText="&#xA;exec ('grant ' + @permissionname_ + ' on ' + @objectname_ + ' to ' + @username_);&#xD;" StatementId="10" StatementCompId="29" StatementType="EXECUTE STRING" /></Statements></Batch></BatchSequence></ShowPlanXML>


-- sys.dm_exec_cached_plans (Transact-SQL)
-- https://msdn.microsoft.com/en-us/library/ms187404.aspx



-- 查詢欄位
--StmtText	StmtId	NodeId	Parent	PhysicalOp	LogicalOp	Argument	DefinedValues	EstimateRows	EstimateIO	EstimateCPU	AvgRowSize	TotalSubtreeCost	OutputList	Warnings	Type	Parallel	EstimateExecutions
SET SHOWPLAN_ALL ON;
GO
-- 啟用後，後續的SQL語法 不執行，只會產生文字執行計畫
-- SET SHOWPLAN_ALL (Transact-SQL)
-- https://docs.microsoft.com/en-us/sql/t-sql/statements/set-showplan-all-transact-sql
-- Causes Microsoft SQL Server not to execute Transact-SQL statements. 
-- Instead, SQL Server returns detailed information about how the statements are executed and provides estimates of the resource requirements for the statements.



SET SHOWPLAN_TEXT ON;
GO
-- 啟用後，後續的SQL語法 不執行
-- SET SHOWPLAN_TEXT (Transact-SQL)
-- https://docs.microsoft.com/en-us/sql/t-sql/statements/set-showplan-text-transact-sql
-- Causes Microsoft SQL Server not to execute Transact-SQL statements. Instead, SQL Server returns detailed information about how the statements are executed.
-- When SET SHOWPLAN_TEXT is ON, SQL Server returns execution information for each Transact-SQL statement without executing it. 



SET STATISTICS PROFILE ON;
GO
-- 啟用後，後續的SQL語法 會執行
-- SET STATISTICS PROFILE (Transact-SQL)
-- https://docs.microsoft.com/en-us/sql/t-sql/statements/set-statistics-profile-transact-sql
-- When STATISTICS PROFILE is ON, each executed query returns its regular result set, followed by an additional result set that shows a profile of the query execution.





SET STATISTICS TIME ON;  
GO 
--SET STATISTICS TIME (Transact-SQL)
--https://msdn.microsoft.com/en-us/library/ms190287.aspx

--SQL Server parse and compile time:   
--   CPU time = 0 ms, elapsed time = 1 ms.  
--SQL Server parse and compile time:   
--   CPU time = 0 ms, elapsed time = 1 ms.  
  
--(269 row(s) affected)  
  
--SQL Server Execution Times:  
--   CPU time = 0 ms,  elapsed time = 2 ms.  
--SQL Server parse and compile time:   
--   CPU time = 0 ms, elapsed time = 1 ms.  



--SET STATISTICS IO (Transact-SQL)
--https://msdn.microsoft.com/en-us/library/ms184361.aspx
SET STATISTICS IO ON;  
GO 

--Table 'ProductCostHistory'. Scan count 1, logical reads 5, physical   
--reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0,   
--lob read-ahead reads 0. 